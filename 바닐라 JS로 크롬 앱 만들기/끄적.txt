#2.0 Your First JS Project
브라우저는 HTML을 열고, HTML은 CSS와 JavaScript를 가져온다.
    <link rel='stylesheet' type='text/css' media='screen' href='style.css'>
    <script src='app.js'></script>

#2.1 Basic Data Types
number : integer, float
string : "text" 'text'

#2.2 Variables
console.log(); //console에 log, print하는 성격
const 상수(기본적으로 사용할 것)
변수 명 camelCase으로

#2.3 const and let
let 변수(가끔 필요시에 사용)
코드는 위에서 아래로 실행
var 과거에 사용했던 것.

#2.4 Booleans 
boolean = ture, false
null = nothing 변수를 선언했고 값은 아무것도 없는 상태로 정의함(의도적으로 생성. 자연적으로 발생하는 값이 아님)
undifined 변수를 선언해서 메모리 안에는 존재하지만, 값이 정의되지 않음

#2.5 Arrays
데이터로 이루어진 리스트. 각각의 항목을 쉼표로 구분, []
0부터 인덱스 시작. 
삽입하는 방법은  .push()
정보 없데이트도 가능 [몇번째 내용을] = 뭐로 바꾸겠다

#2.6 Objects
Arrays로 묶었을 때 무슨 의미인지 알 수 없을 때
{ } 안에서 = 대신 : , 연결은 콤마로 하여 property들을 작성 
consol.log로 출력 시 {name: 'jj', point: 10, fat: false} 처럼 나옴
object의 형을 const로 만들었더라도 그 내부의 값을 바꾸는 것은 가능함

#2.7 Functions part One & #2.8 Functions part Two
계속 사용 가능한 코드
function 함수명( {}안에서 사용할 argument 이름) { }
인자 명을 함수 밖에서 사용하려고 하면 오류
Objects 안에서 함수를 생성할 수도 있음

#2.10 Recap II 계산기 만들어보기

#2.11 Returns
함수를 호출했을 때 값을 return. return 되는 순간 함수 끝남 

#2.13 Conditionals
prompt() 는 예전에 사용하던 입력값 받는 방식.
typeof 변수명 : 변수의 타입
parseInt() : integer 형으로 변환.(typeof = number)
if 만약 () 안의 변수가 number가 아니라면 NaN (Not a Number) 출력됨
isNaN() : ()안의 것이 NaN가 맞는지 아닌지 boolean 값을 return하는 함수

#2.15 Conditionals part Three
&& || 
== 값만 비교하는 연산자 ( 0 == false => true)
=== 유형도 비교 ( 0 === false => false)




